#summary A getting started guide.
#labels Featured
=Getting Started Guide=
_This guide is very brief and incomplete. Feel free to fix or improve it_

==Installation==
For maven users, the easiest way to get going is to add the following repository and dependency to your project. 

_Please verify the latest version_:


{{{
<repository>
   <id>orika-googlecode</id>
   <url>http://orika.googlecode.com/svn/repo</url>
</repository>
...
<dependency>
   <groupId>ma.glasnost.orika</groupId>
   <artifactId>orika-core</artifactId>
   <version>1.0</version>
</dependency> 
}}}

If you do not use maven please download the latest version of the archive zip with dependencies and put it on your classpath.

Once your project configured you can start the following tutorial.

===3rd Party Dependencies===

Orika use javassist to generate byte-code dynamically. If you're downloading and installing the compiled jar in your local m2 repository rather than building from source using maven, you will not get any of the transitive dependencies



== Tutorial ==

=== Auto mapping ===

At the heart of Orika there is the factory and the mapper facade : 

 * `MapperFactory` : maintain a registry of mappers, converters and object factories 
 * `MapperFacade` : handle all mapping operations

By default Orika copy all properties with the same name and compatible types:

{{{
...
MapperFacory mapperFactory = new DefaultMapperFactory();
MapperFacade mapperFacade = mapperFactory.getMapperFacade();

BeanA a = new BeanA();
...
BeanB b = mapperFacade.map(a, BeanB.class);

System.out.println(b);
}}}

=== Configured mapping ===

TODO

=== Custom Java Mapping ===

TODO

=== Converters ===

TODO

=== Bi-directional mapping ===

TODO

=== Object factories ===

TODO

== Advanced topics ==
=== Resolving concrete classes ===

TODO

=== Proxy handlers ===

TODO